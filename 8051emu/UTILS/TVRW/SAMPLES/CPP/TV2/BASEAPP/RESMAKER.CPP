/**************************************************************************
  RESMAKER.CPP Resource maker program

  Copyright (C) 1996 BitSoft Development, L.L.C.

  Generated by Turbo Vision Resource WorkShop
***************************************************************************/

#define Uses_TApplication
#define Uses_TKeys
#define Uses_TRect
#define Uses_TMenuBar
#define Uses_TSubMenu
#define Uses_TMenuItem
#define Uses_TStatusLine
#define Uses_TStatusItem
#define Uses_TStatusDef
#define Uses_TDeskTop
#define Uses_TButton
#define Uses_TLabel
#define Uses_TStaticText
#define Uses_TParamText
#define Uses_TMemo
#define Uses_TListBox
#define Uses_TSItems
#define Uses_TSortedListBox
#define Uses_TScrollBar
#define Uses_THistory
#define Uses_TInputLine
#define Uses_TCheckBoxes
#define Uses_TRadioButtons
#define Uses_TSItem
#define Uses_TMultiCheckBoxes
#define Uses_TPXPictureValidator
#define Uses_TStringCollection
#define Uses_TStringLookupValidator
#define Uses_TRangeValidator
#define Uses_TDialog
#define Uses_TResourceFile
#define Uses_TStringList
#define Uses_TStrListMaker
#define Uses_fpstream

#include <tvision\tv.h>
#include "types.h"

__link(RButton);
__link(RLabel);
__link(RStaticText);
__link(RParamText);
__link(RMemo);
__link(RListBox);
__link(RSortedListBox);
__link(RScrollBar);
__link(RHistory);
__link(RInputLine);
__link(RCheckBoxes);
__link(RRadioButtons);
__link(RPXPictureValidator);
__link(RStringCollection);
__link(RStringLookupValidator);
__link(RRangeValidator);
__link(RDialog);
__link(RMenuBar);
__link(RMenuBox);
__link(RStatusLine);
__link(RResourceCollection);

TDialog *makeAboutBox(void)
{
    TView *Control, *Crnt, *Peer;
    TRect r;
    TScrollBar *SB1, *SB2;
    TStringCollection *strs;
    TValidator *V;

    r = TRect(20, 5, 59, 18);
    TDialog *dlg = new TDialog(r, "About...");

    dlg->options = dlg->options | (ofCenterX+ofCenterY);
    r = TRect(14, 10, 24, 12);
    Crnt = new TButton(r, "O~k~", cmOK, bfDefault);
    Crnt->helpCtx = hcAboutBox;
    Crnt->options = Crnt->options | (ofCenterX);
    Crnt->state = Crnt->state | (sfActive+sfSelected+sfFocused+sfExposed);
    Crnt->dragMode = Crnt->dragMode & ~(dmLimitLoY);
    dlg->insert(Crnt);
    r = TRect(10, 2, 29, 3);
    Control = new TStaticText(r, "Sample Application");
    Control->options = Control->options | (ofCenterX);
    Control->state = Control->state | (sfActive+sfSelected+sfFocused+sfExposed);
    Control->dragMode = Control->dragMode & ~(dmLimitLoY) | (dmLimitHiX);
    dlg->insert(Control);
    r = TRect(12, 4, 27, 5);
    Control = new TStaticText(r, "Created using");
    Control->state = Control->state | (sfActive+sfSelected+sfFocused+sfExposed);
    Control->dragMode = Control->dragMode & ~(dmLimitLoY) | (dmLimitHiY);
    dlg->insert(Control);
    r = TRect(4, 5, 35, 6);
    Control = new TStaticText(r, "Turbo Vision Resource Workshop");
    Control->options = Control->options | (ofCenterX);
    Control->state = Control->state | (sfActive+sfSelected+sfFocused+sfExposed);
    Control->dragMode = Control->dragMode & ~(dmLimitLoY) | (dmLimitHiX);
    dlg->insert(Control);
    r = TRect(10, 7, 29, 8);
    Control = new TStaticText(r, "Copyright (C) 1996");
    Control->options = Control->options | (ofCenterX);
    Control->state = Control->state | (sfActive+sfSelected+sfFocused+sfExposed);
    Control->dragMode = Control->dragMode & ~(dmLimitLoY) | (dmLimitHiX);
    dlg->insert(Control);
    r = TRect(5, 8, 33, 9);
    Control = new TStaticText(r, "BitSoft Development, L.L.C.");
    Control->options = Control->options | (ofCenterX);
    Control->state = Control->state | (sfActive+sfSelected+sfFocused+sfExposed);
    Control->dragMode = Control->dragMode & ~(dmLimitLoY) | (dmLimitHiX);
    dlg->insert(Control);

    Crnt->select();
    return dlg;
}

TMenuBar *makeSampleMenu(void)
{
    TRect r(0, 0, 80, 1);

    return new TMenuBar(r,
        *new TSubMenu("~F~ile", kbAltF, hcNoContext) +
            *new TMenuItem("~N~ew", cmNew, kbNoKey, hcNew) +
            *new TMenuItem("~O~pen...", cmOpen, kbF3, hcOpen, "F3") +
            *new TMenuItem("~S~ave", cmSave, kbF2, hcSave, "F2") +
            *new TMenuItem("S~a~ve as...", cmSaveAs, kbNoKey, hcSaveAs) +
            *new TMenuItem("Save a~l~l", cmSaveAll, kbNoKey, hcSaveAll) +
            newLine() +
            *new TMenuItem("~C~hange dir...", cmChangeDir, kbNoKey, hcChangeDir) +
            *new TMenuItem("~D~OS shell", cmDosShell, kbNoKey, hcDosShell) +
            *new TMenuItem("E~x~it", cmQuit, kbAltX, hcExit, "Alt+X") +
        *new TSubMenu("~E~dit", kbAltE, hcNoContext) +
            *new TMenuItem("~U~ndo", cmUndo, kbAltBack, hcUndo) +
            newLine() +
            *new TMenuItem("Cu~t~", cmCut, kbShiftDel, hcCut, "Shift+Del") +
            *new TMenuItem("~C~opy", cmCopy, kbCtrlIns, hcCopy, "Ctrl+Ins") +
            *new TMenuItem("~P~aste", cmPaste, kbShiftIns, hcPaste, "Shift+Ins") +
            *new TMenuItem("C~l~ear", cmClear, kbCtrlDel, hcClear, "Ctrl+Del") +
        *new TSubMenu("~S~ample Menu", kbAltS, hcSampleMenu) +
            *new TMenuItem("Sample ~I~tem", 100, kbAltI, hcSampleItem, "Alt-I") +
        *new TSubMenu("~W~indow", kbAltW, hcNoContext) +
            *new TMenuItem("~T~ile", cmTile, kbNoKey, hcTile) +
            *new TMenuItem("C~a~scade", cmCascade, kbNoKey, hcCascade) +
            *new TMenuItem("Cl~o~se all", cmCloseAll, kbNoKey, hcCloseAll) +
            newLine() +
            *new TMenuItem("~S~ize/Move", cmResize, kbCtrlF5, hcResize, "Ctrl+F5") +
            *new TMenuItem("~Z~oom", cmZoom, kbF5, hcZoom, "F5") +
            *new TMenuItem("~N~ext", cmNext, kbF6, hcNext, "F6") +
            *new TMenuItem("~P~revious", cmPrev, kbShiftF6, hcPrev, "Shift+F6") +
            *new TMenuItem("~C~lose", cmClose, kbAltF3, hcClose, "Alt+F3") +
        *new TSubMenu("~H~elp", kbAltH, hcNoContext) +
            *new TMenuItem("~C~ontents", cmHelp, kbF1, hcHelp, "F1") +
            *new TMenuItem("~I~ndex", cmIndex, kbShiftF1, hcIndex, "Shift+F1") +
            *new TMenuItem("~P~revious topic", cmPrevTopic, kbAltF1, hcPrevTopic, "Alt+F1") +
            *new TMenuItem("~U~sing help", cmHelpOnHelp, kbNoKey, hcHelpOnHelp) +
            newLine() +
            *new TMenuItem("~A~bout", cmAbout, kbNoKey, hcAbout)
    );
}

TStatusLine *makeSampleStatus(void)
{
    TRect r(0, 24, 80, 25);
    return new TStatusLine(r,
        *new TStatusDef(hcDragging, hcDragging) +
            *new TStatusItem("~\x18\x19\x1B\x1A~ Move", kbNoKey, 0) +
            *new TStatusItem("~Shift+\x18\x19\x1B\x1A~ Resize", kbNoKey, 0) +
            *new TStatusItem("~\x11ÄÄÙ~ Done", kbNoKey, 0) +
            *new TStatusItem("~Esc~ Cancel", kbNoKey, 0) +
        *new TStatusDef(hcAboutBox, hcAboutBox) +
            *new TStatusItem("~ENTER~ Exit the About Box", kbNoKey, cmOK) +
        *new TStatusDef(hcNoContext, 0xFFFF) +
            *new TStatusItem("~F1~ Help", kbF1, cmHelp) +
            *new TStatusItem("~F2~ Save", kbF2, cmSave) +
            *new TStatusItem("~F3~ Open", kbF3, cmOpen) +
            *new TStatusItem("~F5~ Zoom", kbF5, cmZoom) +
            *new TStatusItem("~F6~ Next", kbF6, cmNext) +
            *new TStatusItem("~F10~ Menu", kbF10, cmMenu) +
            *new TStatusItem("", kbShiftF6, cmPrev) +
            *new TStatusItem("", kbAltF3, cmClose) +
            *new TStatusItem("", kbCtrlF5, cmResize) +
            *new TStatusItem("", kbAltX, cmQuit));

}


int main(void)
{
    TResourceFile *resFile;
    TView *v;
    TStrListMaker *str;

    resFile = new TResourceFile(new fpstream("MYAPP.RES", ios::out|ios::binary|ios::trunc));
    v = makeAboutBox(); resFile->put(v, "AboutBox"); TObject::destroy(v);
    v = makeSampleMenu(); resFile->put(v, "SampleMenu"); TObject::destroy(v);
    v = makeSampleStatus(); resFile->put(v, "SampleStatus"); TObject::destroy(v);
    TObject::destroy(resFile);
    return (0);
}

